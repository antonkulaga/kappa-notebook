####### HASTY OSCILIATOR, WARNING: IN PROGRESS, NOT YET WORKING!#############

#### Signatures 
%agent: pLacAra(lacI_one, lacI_two, araC, down) # Hybrid pLacAra promoter
%agent: LacI_DNA(up) 
%agent: AraC_DNA(up)
%agent: LacI_RNA()
%agent: AraC_RNA()
%agent: LacI_unf() #unfolded version
%agent: AraC_unf() #unfolded version

%agent: LacI(left, right, dna) # binding
%agent: AraC(araC, dna) # binding

#%token: IPTG
#%token: Arabinose


#### Parameters
# we use  minutes^-1 for coefficients

%var: 'b_a' 0.36 #translation of activator plasmid in minutes^-1
%var: 'b_r' 'b_a'
%var: 'a' 20

%var: 'k_off_a' 1.8
%var: 'k_off_r' 'k_off_a'

%var: 't_a' 90 #translation on activator plasmid
%var: 't_r' 't_a'

%var: 'd_a' 0.54
%var: 'd_r' 'd_a'

%var: 'k_fa' 0.9
%var: 'k_fr' 'k_fa'

%var: 'k_da' 0.018 #min−molecules−1
%var: 'k_dr' 'k_da'
%var: 'k_t' 'k_dr'

%var: 'k_off_da' 0.00018
%var: 'k_off_dr' 'k_off_da'
%var: 'k_off_t' 'k_off_dr' #k_off for tetramer

%var: 'k_l' 0.36
%var: 'k_ul' 0.18

%var: 'gamma' 1080 #molecules/min useful for conting degradation rate
%var: 'c_e' 0.1
%var: 'lambda' 2.5
%var: 'k_deg' 2#('gamma' / ( 'c_e' + 1 ))
%var: 'k_deg_a' 2#'lambda' * 'gamma'

%var: 'e' 0.2

%var: 'n_a' 50 #copynumber
%var: 'n_r' 25 #copynumber

%var: 'c_min_a' 0.001
%var: 'c_max_a' 0.2

%var: 'c_min_r' 0.2
%var: 'c_max_r' 0.2

%var: 'IPTG' 0.2
%var: 'Arabinose' 0.2


%var: 'k_r1' 0.035
%var: 'b_1' 2


#%var: 'k_r' 'k_off_r' * ( ('c_max_r' - 'c_min_r') * 1 / ( 1 + 'IPTG' / 'k_r1' ) + 'c_min_r')
#%var: 'k_a' 'k_off_r' * ( ('c_max_r' - 'c_min_r') * 1 / ( 1 + 'IPTG' / 'k_r1' ) + 'c_min_r')

%var: 'k_r' 0.01 #for test run
%var: 'k_a' 0.02 #for test run


#### Rules 
#for the simplicity we make one binding for multimers
'AraC binding' pLacAra(araC), AraC(dna, araC!1), AraC(dna, araC!1) <->  pLacAra(araC!2), AraC(dna!2, araC!1), AraC(dna, araC!1) @ 'k_a', 'k_off_a'
'LacI binding fresh' pLacAra(lacI_one), LacI(dna, left, right!1), LacI(left!1, right), LacI(left, right!2), LacI(left!2, right)  <->  pLacAra(lacI_one!3), LacI(dna!3, left, right!1), LacI(left!1, right), LacI(left, right!2), LacI(left!2, right) @ 2 * 'k_r', 'k_off_r'
'LacI binding second' pLacAra(lacI_one!_, lacI_two), LacI(dna, left, right!1), LacI(left!1, right), LacI(left, right!2), LacI(left!2, right)  <->  pLacAra(lacI_one!_, lacI_two!3), LacI(dna!3, left, right!1), LacI(left!1, right), LacI(left, right!2), LacI(left!2, right) @ 'k_r', 2 * 'k_off_r'

'default AraC transcription' pLacAra(down!1), AraC_DNA(up!1) -> pLacAra(down!1), AraC_DNA(up!1), AraC() @ 'b_a'
'default LacI transcription' pLacAra(down!1), LacI_DNA(up!1) -> pLacAra(down!1), LacI_DNA(up!1), LacI() @ 'b_r'

'induced AraC transcription' AraC(araC!2, dna), AraC(araC!2, dna!3), pLacAra(araC!3, down!1), AraC_DNA(up!1) -> AraC(araC!2, dna), AraC(araC!2, dna!3), pLacAra(araC!3, down!1), AraC_DNA(up!1), AraC_RNA() @ 2 * 'b_a'
'induced LacI transcription' AraC(araC!2, dna), AraC(araC!2, dna!3), pLacAra(araC!3, down!1), LacI_DNA(up!1) -> AraC(araC!2, dna), AraC(araC!2, dna!3), pLacAra(araC!3, down!1), LacI_DNA(up!1), LacI_RNA() @ 2 * 'b_r'

'translation of AraC' AraC_RNA() -> AraC_RNA(), AraC_unf() @ 't_a'
'translation of LacI' LacI_RNA() -> AraC_RNA(), LacI_unf() @ 't_r'

'folding of AraC' AraC_unf() -> AraC() @ 'k_fa'
'folding of LacI' LacI_unf() -> LacI() @ 'k_fr'

'dimer of Ara' AraC(araC), AraC(araC) <-> AraC(araC!1), AraC(araC!1) @ 'k_da', 'k_off_da'
'dimer of LacI' LacI(left, right), LacI(left, right) <-> LacI(left, right!1), LacI(left!1, right) @ 'k_dr', 'k_off_dr'
'tetramer LacI' LacI(left, right!1), LacI(left!1, right), LacI(left, right!2), LacI(left!2, right) <-> LacI(left, right!1), LacI(left!1, right!2), LacI(left!2, right!3), LacI(left!3, right) @ 'k_t', 'k_off_t'

'mRNA degradation' AraC_RNA() -> @ 'd_a'
'mRNA degradation' LacI_RNA() -> @ 'd_r'

'AraC_unf dedradation' AraC_unf()-> @ 'k_deg_a'
'LacI_unf dedradation' LacI_unf()-> @ 'k_deg'

'AraC dedradation' AraC()-> @ 'k_deg_a'
'LacI dedradation' LacI()-> @ 'k_deg'

%obs: 'AraC' AraC()
%obs: 'LacI' LacI()

#### Initial conditions 
%init: 'n_a' pLacAra(down!1), AraC_DNA(up!1)
%init: 'n_r' pLacAra(down!1), LacI_DNA(up!1)

